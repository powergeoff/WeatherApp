{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "backend build",
      "type": "shell",
      "command": "dotnet build",
      "options": {
        "cwd": "${workspaceRoot}/WeatherApp.API"
      }
    },
    {
      "label": "backend dev",
      "type": "shell",
      "command": "dotnet run --urls http://localhost:5000/",
      "options": {
        "cwd": "${workspaceRoot}/WeatherApp.API",
        "env": {
          "ASPNETCORE_ENVIRONMENT": "Development",
          "DOTNET_WATCH_SUPPRESS_STATIC_FILE_HANDLING": "true"
        }
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    },
    {
      "label": "frontend dev",
      "type": "shell",
      "command": "npm run start",
      "options": {
        "cwd": "${workspaceRoot}/WeatherApp.UI"
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    },
    {
      "label": "backend test",
      "type": "shell",
      "command": "dotnet test",
      "options": {
        "cwd": "${workspaceRoot}/WeatherApp.Services.Tests",
        "env": {
          "ASPNETCORE_ENVIRONMENT": "Development",
          "DOTNET_WATCH_SUPPRESS_STATIC_FILE_HANDLING": "true"
        }
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    },
    {
      "label": "docker up",
      "type": "shell",
      "command": "docker-compose up",
      "options": {
        "cwd": "${workspaceRoot}"
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    },
    {
      "label": "docker down",
      "type": "shell",
      "command": "docker-compose down",
      "options": {
        "cwd": "${workspaceRoot}"
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    },
    {
      "label": "docker complete rebuild and up",
      "type": "shell",
      "command": "docker-compose up --build --remove-orphans --force-recreate",
      "options": {
        "cwd": "${workspaceRoot}"
      },
      "problemMatcher": [],
      "presentation": {
        "group": "dev"
      }
    }
  ]
}
